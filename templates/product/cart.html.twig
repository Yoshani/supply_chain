{% extends 'base.html.twig' %}

{% block title %}cart{% endblock %}

{% block body %}

{% apply inline_css %} 

<style>
        table th:first-child {
            border-left: 1px solid #e1e1e1;
        }
        table th{
            color: #575757;
            font-weight: 100;
            font-size: 14px;
            background-color: #efefef;
            border-top: 1px solid #e1e1e1;
            border-right: 1px solid #e1e1e1;
            border-bottom: 1px solid #e1e1e1;
            text-align:center;
        }
        table td:first-child {
            border-left: 1px solid #e1e1e1;
        }
        table td{
            color: #6a6a6a;
            font-weight: 400;
            font-size: 14px;
            border-right: 1px solid #e1e1e1;
            border-bottom: 1px solid #e1e1e1;
            text-align:center;
        }

        .tbl-cart {
            font-size: 0.9em;
            width:100%;
        }

        .cart-item-image {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            border: #E0E0E0 1px solid;
            padding: 5px;
            vertical-align: middle;
            margin-right: 15px;
        }
        .no-records {
            text-align: center;
            clear: both;
            margin: 38px 0px;
        }
    </style>

    <body>
        <h2 style="padding-left:180px; padding-top:20px">Shopping Cart</h2>
        <main class="site-content col-xs-9 col-md-9 col-sm-9" style="margin-left: 185px" itemscope="itemscope" itemprop="mainContentOfPage">

        <a style="margin-left: 980px" href="">Empty Cart</a><br><br>
        <table id="cartTable" class="tbl-cart" cellpadding="10" cellspacing="1">
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th>Product Price</th>
                <th>Remove</th>
            </tr>
            <tbody id="cartbody">
            </tbody>
        </table>
        <br>
        <div class="wc-proceed-to-checkout">

            <a href="{{ path('place_order') }}" class="btn btn-1" style="margin-left: 930px" >Proceed to checkout</a>
        </div>
        </main>
        <p id="customerId" style="display:none">{{ app.user.id }}</p>
    </body>
{% endapply %}


    <script>

        var id = document.getElementById("customerId").innerHTML;
        var name = "cartKeyOf:"
        var key = name.concat(id);

        const CART = {
            KEY: key,
            contents: [],
            init(){
                let stor = localStorage.getItem(CART.KEY);
                if(stor){
                    CART.contents = JSON.parse(stor);
                }                
            },
            async sync(){
                let _cart = JSON.stringify(CART.contents);
                await localStorage.setItem(CART.KEY, _cart);
            },
            add(){
                        let obj = {
                            id: "12",
                            title: "name",
                            qty: 1,
                            itemPrice: 120
                        };
                        CART.contents.push(obj);
                        CART.sync();
            },
            remove(id){
                //remove an item entirely from CART.contents based on its id
                CART.contents = CART.contents.filter(item=>{
                    if(item.id !== id)
                        return true;
                });
                CART.sync()
            },
            empty(){
                //empty whole cart
                CART.contents = [];
                CART.sync()
            },
            increase(id, qty=1){
                CART.contents = CART.contents.map(item=>{
                    if(item.id === id)
                        item.qty = item.qty + qty;
                    return item;
                });
                CART.sync()
            },
            reduce(id, qty=1){
                CART.contents = CART.contents.map(item=>{
                    if(item.id === id)
                        item.qty = item.qty - qty;
                    return item;
                });
                CART.contents.forEach(async item=>{
                    if(item.id === id && item.qty === 0)
                        await CART.remove(id);
                });
                CART.sync()
            }
        }

        function test(){
            alert(CART.contents);
        }

        CART.init();
        showCart();
        

        function create(item){
            let name = document.createElement('td');
            name.textContent = item.name;
            cartBody.appendChild(name);

        }
        
        function showCart(){
            let cartTable = document.getElementById('cartTable');
            let cartBody = document.getElementById('cartbody');
            cartBody.innerHTML = '';
            let cartitems = CART.contents;
            cartitems.forEach( item =>{
                let one = document.createElement('tbody');
                one.className = "tbl-cart";

                let name = document.createElement('td');
                name.textContent = item.name;
                one.appendChild(name);

                let quantity = document.createElement('td');
                quantity.textContent = 2;
                one.appendChild(quantity);

                let uprice = document.createElement('td');
                uprice.textContent = item.unitPrice;
                one.appendChild(uprice);

                let price = document.createElement('td');
                price.textContent = quantity.textContent*uprice.textContent;
                one.appendChild(price);

                let remove = document.createElement('td');
                remove.textContent = "remove";
                one.appendChild(remove);

                cartBody.appendChild(one);

            })
            cartTable.appendChild(cartBody);

        }

        function checkout(){
            let details = CART.contents;

        }

    </script>

{% endblock %}